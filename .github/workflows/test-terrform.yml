
name: 'Terraform-gitops-CI'

env:
  AWS_ACCESS_KEY: ${{ secrets.AWS_ACCESS_KEY }}
  AWS_SECRET_KEY: ${{ secrets.AWS_SECRET_KEY }}
  TF_VAR_AWS_REGION: ${{ secrets.AWS_REGION }}
  TF_VAR_SLACK_CHANNEL: ${{ secrets.SLACK_CHANNEL }}
  TF_VAR_SLACK_WORKSPACE: ${{ secrets.SLACK_WORKSPACE }}
  TERRAFORM_DESTORY: false
  
on:
  push:
    branches:
      - feature/**
      - develop
      - uat
      - main
      - master
  pull_request:
    types: 
      - review_requested
      - edited
      - assigned

jobs:
  terraform:
    name: 'Terraform'
    runs-on: ubuntu-latest
    environment: develop

    # Use the Bash shell regardless whether the GitHub Actions runner is ubuntu-latest, macos-latest, or windows-latest
    defaults:
      run:
        shell: bash

    steps:
    # Checkout the repository to the GitHub Actions runner
    - name: Checkout
      uses: actions/checkout@v2
     
    - name: Set output Branch name
      id: vars
      shell: bash
      run: |
        echo "::set-output name=branch::${GITHUB_REF#refs/heads/}"
    
    # Install the latest version of Terraform CLI and configure the Terraform CLI configuration file with a Terraform Cloud user API token
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v1
      with:
        terraform_wrapper: false
     
    - name: DEV Setup Terraform remote 
      working-directory: ./remote-state
      env:
        TF_VAR_GIT_REPO_NAME: ${{ github.event.repository.name }}
        TF_VAR_GIT_BRANCH: develop 
      run: |
        terraform init
        terraform validate
        terraform apply -input=false -auto-approve -var-file='../settingaws.tfvars' || true
        chmod +x "../script/setbackend.sh"
        ../script/setbackend.sh develop 
        rm -rf *.tfstate
     
    - name: UAT Setup Terraform remote 
      working-directory: ./remote-state
      env:
        TF_VAR_GIT_REPO_NAME: ${{ github.event.repository.name }}
        TF_VAR_GIT_BRANCH: uat 
      run: |
        terraform init
        terraform validate
        terraform apply -input=false -auto-approve -var-file='../settingaws.tfvars' || true
        chmod +x "../script/setbackend.sh"
        ../script/setbackend.sh uat 
        rm -rf *.tfstate

    - name:  Prod Setup Terraform remote 
      working-directory: ./remote-state
      env:
        TF_VAR_GIT_REPO_NAME: ${{ github.event.repository.name }}
        TF_VAR_GIT_BRANCH: prod 
      run: |
        terraform init
        terraform validate
        terraform apply -input=false -auto-approve -var-file='../settingaws.tfvars' || true
        chmod +x "../script/setbackend.sh"
        ../script/setbackend.sh prod
        rm -rf *.tfstate
    
    - name: Terraform Test DEV Environment
      env:
        GIT_BRANCH: develop 
      working-directory: ./environment/develop
      run: |
        terraform init
        terraform validate
        terraform plan -var-file='../../settingaws.tfvars'
       
    - name: Terraform Test UAT Environment
      env:
        GIT_BRANCH: uat 
      working-directory: ./environment/uat
      run: |
        terraform init
        terraform validate
        terraform plan -var-file='../../settingaws.tfvars'

    - name: Terraform Test Prod Environment
      env:
        GIT_BRANCH: prod
      working-directory: ./environment/prod
      run: |
        terraform init
        terraform validate
        terraform plan -var-file='../../settingaws.tfvars'
